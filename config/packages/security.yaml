security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        user_db:
            entity:
                class: App\Entity\Client
                property: username






    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            provider: user_db
            anonymous: ~
            logout:
                path: /logout
                target: /
            form_login:
                login_path: login
                check_path: login
#


            #provider: users_in_memory
    encoders:
        App\Entity\Client:
            algorithm: bcrypt
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt


    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin/, roles: ROLE_ADMIN }
         - { path: ^/commandes, roles: ROLE_USER }
         - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }


#        - { path: ^/login, roles: ROLE_USER}
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

